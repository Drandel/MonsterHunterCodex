<link href="~/Content/Armory.css" rel="stylesheet" />
<div id="ArmoryVue" class="vue-app">
    <div class="page-header text-center"><h2>Armory</h2></div>
    <div class="page-content">
        <div class="container">
            <div class="row">
                <div class="col-sm-12 col-mg-4 col-lg-4" id="gear-selection">
                    <h3>Gear Selection</h3>
                    <div id="selection-container">
                        <gear-tile geartype="head"></gear-tile>
                        <gear-tile geartype="chest"></gear-tile>
                        <gear-tile geartype="gloves"></gear-tile>
                        <gear-tile geartype="waist"></gear-tile>
                        <gear-tile geartype="legs"></gear-tile>
                    </div>
                </div>
                
                <div class="col-sm-12 col-mg-8 col-lg-8" id="gear-overview">
                    <h3>Gear Overview</h3>
                    <div class="gear-overview-data-container" v-if="!isSelectedGearEmpty">
                        <div class="col-sm-12 col-mg-4 col-lg-4" >
                            <div class="panel panel-default text-center">
                                <ul class="list-group">
                                    <li class="list-group-item list-title">Defense</li>
                                    <li class="list-group-item">Base: {{stats.defense.base}}</li>
                                    <li class="list-group-item">Max: {{ stats.defense.max }}</li>
                                    <li class="list-group-item">Augmented: {{ stats.defense.augmented }}</li>
                                </ul>
                            </div>

                        </div>
                        <div class="col-sm-12 col-mg-4 col-lg-4">
                            <div class="panel panel-default text-center">
                                <ul class="list-group">
                                    <li class="list-group-item list-title">Resistances</li>
                                    <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/dragon-icon.png" /> Dragon: {{stats.resistances.dragon}}</li>
                                    <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/fire-icon.png" /> Fire: {{stats.resistances.fire}}</li>
                                    <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/ice-icon.png" /> Ice: {{stats.resistances.ice}}</li>
                                    <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/thunder-icon.png" /> Thunder: {{stats.resistances.thunder}}</li>
                                    <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/water-icon.png" /> Water: {{stats.resistances.water}}</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Vue/Components/gearTile.js"></script>

<script>


    var vm = new Vue({
        el: '#ArmoryVue',
        data: {
            name: '',
            stats: {
                defense: {
                    base: 0,
                    max: 0,
                    augmented: 0,
                },
                resistances: {
                    dragon: 0,
                    fire: 0,
                    ice: 0,
                    thunder: 0,
                    water:0,
                },                
            },
            visFlags: {
                activeSearch: '',
            },
            selectedGear:
            {
                head: null,
                gloves: null,
                chest: null,
                waist: null,
                legs: null,
            }
        },
        methods: {
            openGearSearch(event, type) {
                this.visFlags.activeSearch = this.visFlags.activeSearch == type ? '' : type;
            },
            showSpinner: function () {
                $('.spinner-div').hasClass('active') ? $('.spinner-div').removeClass('active') : $('.spinner-div').addClass('active');
            },
            updateStats: function () {
                var vm = this;
                vm.resetStatValues();
                for (var gearType in vm.selectedGear) {
                    if (vm.selectedGear[gearType] !== null)
                    {
                        console.log(vm.selectedGear[gearType])
                        gearPiece = vm.selectedGear[gearType];
                        console.log(gearPiece)
                        defStats = vm.stats.defense;
                        defStats.augmented = defStats.augmented !== null ? (defStats.augmented + gearPiece.defense.augmented) : gearPiece.defense.augmented;
                        defStats.max = defStats.max !== null ? (defStats.max + gearPiece.defense.max) : gearPiece.defense.max;
                        defStats.base = defStats.base !== null ? (defStats.base + gearPiece.defense.base) : gearPiece.defense.base;

                        resStats = vm.stats.resistances;
                        resStats.dragon = resStats.dragon !== null ? (resStats.dragon + gearPiece.resistances.dragon) : gearPiece.resistances.dragon;
                        resStats.fire = resStats.fire !== null ? (resStats.fire + gearPiece.resistances.fire) : gearPiece.resistances.fire;
                        resStats.ice = resStats.ice !== null ? (resStats.ice + gearPiece.resistances.ice) : gearPiece.resistances.ice;
                        resStats.thunder = resStats.thunder !== null ? (resStats.thunder + gearPiece.resistances.thunder) : gearPiece.resistances.thunder;
                        resStats.water = resStats.water !== null ? (resStats.water + gearPiece.resistances.water) : gearPiece.resistances.water;

                    }
                }
            },
            resetStatValues: function () {
                vm.stats.defense.base = 0;
                vm.stats.defense.max = 0;
                vm.stats.defense.augmented = 0;
            }
        },
        computed: {
            isSelectedGearEmpty: function () {
                var vm = this;
                var result = false;
                if (vm.selectedGear.head == null
                    && vm.selectedGear.gloves == null
                    && vm.selectedGear.chest == null
                    && vm.selectedGear.waist == null
                    && vm.selectedGear.legs == null
                ) {
                    result = true;
                }
                return result;
            },
        },
        mounted() {
        },
    })
</script>