<link href="~/Content/Armory.css" rel="stylesheet" />
<div id="ArmoryVue" class="vue-app">
    <div class="page-header text-center"><h2>Armory</h2></div>
    <div class="page-content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12 col-md-4 col-lg-4 ">
                    <h3>Gear Selection</h3>
                    <div class="data-container" @@mouseenter="visFlags.showEdit=true" @@mouseleave="visFlags.showEdit=false">
                        <div v-bind:class="showEdit" class="data-container-header text-center">
                            <button class=" btn-dark" v-bind:class="activeGearCat == 'armor'? 'active' : ''" @@click="activeGearCat = 'armor'">Armor</button>
                            <button class=" btn-dark" v-bind:class="activeGearCat == 'weapon'? 'active' : ''" @@click="activeGearCat = 'weapon'">Weapon</button>
                        </div>
                        <div v-bind:class="activeGearCat == 'armor' ? '' : 'hide' ">
                            <gear-tile ref="headComponent" geartype="head"></gear-tile>
                            <gear-tile ref="chestComponent" geartype="chest"></gear-tile>
                            <gear-tile ref="glovesComponent" geartype="gloves"></gear-tile>
                            <gear-tile ref="waistComponent" geartype="waist"></gear-tile>
                            <gear-tile ref="legsComponent" geartype="legs"></gear-tile>
                            <div v-bind:class="showEdit" class="data-container-footer text-center">
                                <button class="btn btn-blu">Autoill Set</button>
                                <button class="btn btn-dark" @@click="clearSelectedGear">Clear</button>

                            </div>
                        </div>
                        <div v-bind:class="activeGearCat == 'weapon' ? '' : 'hide' ">
                            <h3>Weapon selection here</h3>
                            <br />
                        </div>
                        
                    </div>
                </div>
                <div class="col-sm-12 col-md-8 col-lg-8" id="gear-overview">
                    <h3>Gear Overview</h3>
                    <div class="data-container-flex">
                        <div class="col">
                            <ul class="list-group text-center">
                                <li class="list-group-item list-title">Defense</li>
                                <li class="list-group-item">Base: {{stats.defense.base}}</li>
                                <li class="list-group-item">Max: {{ stats.defense.max }}</li>
                                <li class="list-group-item">Augmented: {{ stats.defense.augmented }}</li>
                            </ul>
                        </div>
                        <div class="col">
                            <ul class="list-group text-center">
                                <li class="list-group-item list-title">Resistances</li>
                                <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/dragon-icon.png" /> Dragon: {{stats.resistances.dragon}}</li>
                                <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/fire-icon.png" /> Fire: {{stats.resistances.fire}}</li>
                                <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/ice-icon.png" /> Ice: {{stats.resistances.ice}}</li>
                                <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/thunder-icon.png" /> Thunder: {{stats.resistances.thunder}}</li>
                                <li class="list-group-item"><img class="table-icon" src="~/Assets/Images/Elements/water-icon.png" /> Water: {{stats.resistances.water}}</li>
                            </ul>
                        </div>
                        <div class="col">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Vue/Components/gearTile.js"></script>

<script>


    var vm = new Vue({
        el: '#ArmoryVue',
        data: {
            name: '',
            stats: {
                defense: {
                    base: 0,
                    max: 0,
                    augmented: 0,
                },
                resistances: {
                    dragon: 0,
                    fire: 0,
                    ice: 0,
                    thunder: 0,
                    water:0,
                },
                skills: {},
            },
            visFlags: {
                activeSearch: '',
                showEdit: false,
            },
            selectedGear:
            {
                head: null,
                gloves: null,
                chest: null,
                waist: null,
                legs: null,
            },
            activeGearCat : 'armor',
        },
        methods: {
            openGearSearch(event, type) {
                this.visFlags.activeSearch = this.visFlags.activeSearch == type ? '' : type;
            },
            showSpinner: function () {
                $('.spinner-div').hasClass('active') ? $('.spinner-div').removeClass('active') : $('.spinner-div').addClass('active');
            },
            updateStats: function () {
                var vm = this;
                vm.resetStatValues();
                for (var gearType in vm.selectedGear) {
                    if (vm.selectedGear[gearType] !== null)
                    {
                        console.log(vm.selectedGear[gearType])
                        gearPiece = vm.selectedGear[gearType];
                        console.log(gearPiece)
                        defStats = vm.stats.defense;
                        defStats.augmented = defStats.augmented !== null ? (defStats.augmented + gearPiece.defense.augmented) : gearPiece.defense.augmented;
                        defStats.max = defStats.max !== null ? (defStats.max + gearPiece.defense.max) : gearPiece.defense.max;
                        defStats.base = defStats.base !== null ? (defStats.base + gearPiece.defense.base) : gearPiece.defense.base;

                        resStats = vm.stats.resistances;
                        resStats.dragon = resStats.dragon !== null ? (resStats.dragon + gearPiece.resistances.dragon) : gearPiece.resistances.dragon;
                        resStats.fire = resStats.fire !== null ? (resStats.fire + gearPiece.resistances.fire) : gearPiece.resistances.fire;
                        resStats.ice = resStats.ice !== null ? (resStats.ice + gearPiece.resistances.ice) : gearPiece.resistances.ice;
                        resStats.thunder = resStats.thunder !== null ? (resStats.thunder + gearPiece.resistances.thunder) : gearPiece.resistances.thunder;
                        resStats.water = resStats.water !== null ? (resStats.water + gearPiece.resistances.water) : gearPiece.resistances.water;
                    }
                }
            },
            resetStatValues: function () {
                vm.stats = {
                    defense: {
                        base: 0,
                        max: 0,
                        augmented: 0,
                    },
                    resistances: {
                        dragon: 0,
                        fire: 0,
                        ice: 0,
                        thunder: 0,
                        water: 0,
                    },
                }
            },
            clearSelectedGear: function () {
                this.selectedGear.head = { head: null, gloves: null, chest: null, waist: null, legs: null, };
                this.$refs.headComponent.clearSelection();
                this.$refs.glovesComponent.clearSelection();
                this.$refs.chestComponent.clearSelection();
                this.$refs.waistComponent.clearSelection();
                this.$refs.legsComponent.clearSelection();
                this.resetStatValues();
            }
        },
        computed: {
            isSelectedGearEmpty: function () {
                var vm = this;
                var result = false;
                if (vm.selectedGear.head == null
                    && vm.selectedGear.gloves == null
                    && vm.selectedGear.chest == null
                    && vm.selectedGear.waist == null
                    && vm.selectedGear.legs == null
                ) {
                    result = true;
                }
                return result;
            },
            showEdit: function () {
                if (this.visFlags.showEdit == true) {
                    return "_show";
                } else {
                    return "_hide";
                }
            }
        },
        mounted() {
        },
    })
</script>